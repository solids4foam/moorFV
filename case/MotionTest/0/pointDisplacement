/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       pointVectorField;
    location    "0.01";
    object      pointDisplacement;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    wing
    {
        type            finiteVolumeBeamDisplacement;
        mass            22.9;
        centreOfMass    (0.4974612746 -0.01671895744 0.125);
        momentOfInertia (1.958864357 3.920839234 2.057121362);
        orientation
        (
            0.9953705935 0.09611129781 0
           -0.09611129781 0.9953705935 0
            0 0 1
        );
        velocity        (0 0 0);
        acceleration    (0 0 0);
        angularMomentum (0 0 -0.5);
        torque          (0 0 0);
        rhoName         rhoInf;
        rhoInf          1;
        g               (0 -9.81 0);
        report          on;
        constraints
        {

        }
        restraints
        {
            verticalSpring
            {
                sixDoFRigidBodyMotionRestraintNew finiteVolumeBeamRestraint;

                 finiteVolumeBeamRestraintCoeffs
                 {
                
                 }
            }
        }
        value           uniform (0 0 0);
    }

    front
    {
        type            empty;
    }

    back
    {
        type            empty;
    }

     ".*"
     {
         type            fixedValue;
         value           uniform (0 0 0);
     }
}


// ************************************************************************* //
